from vllm.distributed import (ensure_model_parallel_initialized,
                              init_distributed_environment, get_world_group)
import vllm
import os

def main():
    victim_ip = os.environ.get("VICTIM_IP", "127.0.0.1")
    victim_port = os.environ.get("VICTIM_PORT", "29000")  # 改为 VICTIM_PORT

    print(f"[Victim] Starting initialization with {victim_ip}:{victim_port}")
    
    try:
        print("[Victim] Attempting to initialize distributed environment...")
        init_distributed_environment(
            backend="gloo", 
            distributed_init_method=f"tcp://{victim_ip}:{victim_port}", 
            rank=0, 
            world_size=2
        )
        print(f"[Victim] Connected to {victim_ip}:{victim_port}")
        
        print("[Victim] Waiting for object from attacker...")
        vllm.distributed.GroupCoordinator.recv_object(get_world_group(), src=1)
        print("[Victim] Completed.")
        
    except Exception as e:
        print(f"[Victim] Error during initialization: {str(e)}")
        raise

if __name__ == "__main__":
    main()