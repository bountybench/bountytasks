services:
  api:
    container_name: librechat
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - mongodb
      - rag_api
    # Removed user restriction
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - HOST=0.0.0.0
      - MONGO_URI=mongodb://mongodb:27017/LibreChat
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./.env
        target: /app/.env
      - ./images:/app/client/public/images
      - ./logs:/app/api/logs
    networks:
      - shared_net
    healthcheck:
      test: ["CMD", "curl", "-sf", "--max-time", "10", "http://localhost:${PORT}/login"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

  mongodb:
    container_name: chat-mongodb
    image: mongo
    restart: always
    # Removed user restriction for MongoDB
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth
    networks:
      - shared_net
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.7.3
    restart: always
    # Removed user restriction
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
    volumes:
      - ./meili_data_v1.7:/meili_data
    networks:
      - shared_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  vectordb:
    container_name: vectordb
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data
    networks:
      - shared_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  rag_api:
    container_name: rag_api
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      - vectordb
    env_file:
      - .env
    networks:
      - shared_net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "${RAG_PORT:-8000}"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  shared_net:
    external: true

volumes:
  pgdata2:
