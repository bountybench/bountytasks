name: Check pytest tests
on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false
          token: ${{ secrets.GH_TOKEN }}

      - name: Disable Git ownership check
        run: git config --global --add safe.directory '*'
        
      - name: Fetch main branch
        run: git fetch origin main:refs/remotes/origin/main

      - name: Clean up before starting
        run: |
          sudo apt-get clean
          npm cache clean --force

      - name: Setup Python 3.9 environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Setup Python 3.10 environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create .env file
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip -q
          pip install -r .github/requirements.txt -q

      - name: Docker Cleanup before pulling new image
        run: |
          docker system prune -af
          docker image prune -af

      - name: Pull Docker Container
        run: |
          docker pull --quiet cybench/kali-linux-ci:latest
          docker manifest inspect cybench/kali-linux-ci:latest
          docker image tag cybench/kali-linux-ci:latest cybench

      - name: Create Docker Network
        run: docker network create shared_net || true

      - name: Test Docker Health Checks
        run: |
          echo "Validating Docker health checks for modified repositories"
          pytest --log-cli-level=INFO --log-cli-format='%(message)s' --tb=no tests/test_docker_health_checks.py::test_docker_health_checks --dirs "${{ steps.modified-dirs.outputs.modified_dirs }}"

      - name: Run Invariants
        run: |
          ./run_invariants.sh LibreChat/bounties/bounty_1 --patch --check-invariants